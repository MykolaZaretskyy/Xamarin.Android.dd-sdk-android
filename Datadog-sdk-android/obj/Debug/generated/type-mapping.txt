com/datadog/android/BuildConfig = Com.Datadog.Android.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  LOGCAT_ENABLED = LogcatEnabled
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/datadog/android/core/configuration/BatchSize = Com.Datadog.Android.Core.Configuration.BatchSize
  LARGE = Large
  MEDIUM = Medium
  SMALL = Small
  valueOf(Ljava/lang/String;)Lcom/datadog/android/core/configuration/BatchSize; = ValueOf(string)
  values()[Lcom/datadog/android/core/configuration/BatchSize; = Values()
com/datadog/android/core/configuration/Configuration = Com.Datadog.Android.Core.Configuration.Configuration
  Companion = Companion
  DEFAULT_SAMPLING_RATE = DefaultSamplingRate
  ERROR_MALFORMED_HOST_IP_ADDRESS = ErrorMalformedHostIpAddress
  ERROR_MALFORMED_URL = ErrorMalformedUrl
  WARNING_USING_URL_FOR_HOST = WarningUsingUrlForHost
com/datadog/android/core/configuration/Credentials = Com.Datadog.Android.Core.Configuration.Credentials
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string)
  getClientToken()Ljava/lang/String; = ClientToken
  getEnvName()Ljava/lang/String; = EnvName
  getRumApplicationId()Ljava/lang/String; = RumApplicationId
  getServiceName()Ljava/lang/String; = ServiceName
  getVariant()Ljava/lang/String; = Variant
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/String; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()Ljava/lang/String; = Component4()
  component5()Ljava/lang/String; = Component5()
  copy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/datadog/android/core/configuration/Credentials; = Copy(string, string, string, string, string)
com/datadog/android/core/configuration/UploadFrequency = Com.Datadog.Android.Core.Configuration.UploadFrequency
  AVERAGE = Average
  FREQUENT = Frequent
  RARE = Rare
  valueOf(Ljava/lang/String;)Lcom/datadog/android/core/configuration/UploadFrequency; = ValueOf(string)
  values()[Lcom/datadog/android/core/configuration/UploadFrequency; = Values()
com/datadog/android/core/internal/constraints/DatadogDataConstraintsKt = Com.Datadog.Android.Core.Internal.Constraints.DatadogDataConstraintsKt
com/datadog/android/core/internal/data/file/FileExtensionsKt = Com.Datadog.Android.Core.Internal.Data.File.FileExtensionsKt
  readBytes(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[B = ReadBytes(Java.IO.File, Java.Lang.ICharSequence, Java.Lang.ICharSequence)
com/datadog/android/core/internal/domain/TimeKt = Com.Datadog.Android.Core.Internal.Domain.TimeKt
  asTime(J)Ljava/lang/Object; = AsTime(long)
com/datadog/android/core/internal/net/RequestUniqueIdentifierKt = Com.Datadog.Android.Core.Internal.Net.RequestUniqueIdentifierKt
com/datadog/android/core/internal/utils/ByteArrayExtKt = Com.Datadog.Android.Core.Internal.Utils.ByteArrayExtKt
  indexOf([BBI)I = IndexOf(byte[], sbyte, int)
  split([BB)Ljava/util/List; = Split(byte[], sbyte)
com/datadog/android/core/internal/utils/ComponentPredicateExtKt = Com.Datadog.Android.Core.Internal.Utils.ComponentPredicateExtKt
com/datadog/android/core/internal/utils/FileLockExtKt = Com.Datadog.Android.Core.Internal.Utils.FileLockExtKt
com/datadog/android/core/internal/utils/MapUtilsKt = Com.Datadog.Android.Core.Internal.Utils.MapUtilsKt
com/datadog/android/core/internal/utils/MiscUtilsKt = Com.Datadog.Android.Core.Internal.Utils.MiscUtilsKt
com/datadog/android/core/internal/utils/RuntimeUtilsKt = Com.Datadog.Android.Core.Internal.Utils.RuntimeUtilsKt
  DEV_LOG_PREFIX = DevLogPrefix
  SDK_LOG_PREFIX = SdkLogPrefix
  WARN_DEPRECATED = WarnDeprecated
  WARN_DEPRECATED_WITH_ALT = WarnDeprecatedWithAlt
com/datadog/android/core/internal/utils/ThrowableExtKt = Com.Datadog.Android.Core.Internal.Utils.ThrowableExtKt
  loggableStackTrace(Ljava/lang/Throwable;)Ljava/lang/String; = LoggableStackTrace(Java.Lang.Throwable)
com/datadog/android/core/internal/utils/ViewUtilsKt = Com.Datadog.Android.Core.Internal.Utils.ViewUtilsKt
  resolveViewName(Ljava/lang/Object;)Ljava/lang/String; = ResolveViewName(Java.Lang.Object)
com/datadog/android/core/internal/utils/WorkManagerUtilsKt = Com.Datadog.Android.Core.Internal.Utils.WorkManagerUtilsKt
  CANCEL_ERROR_MESSAGE = CancelErrorMessage
  DELAY_MS = DelayMs
  SETUP_ERROR_MESSAGE = SetupErrorMessage
  TAG_DATADOG_UPLOAD = TagDatadogUpload
  UPLOAD_WORKER_NAME = UploadWorkerName
com/datadog/android/Datadog = Com.Datadog.Android.Datadog
  ENV_NAME_VALIDATION_REG_EX = EnvNameValidationRegEx
  INSTANCE = Instance
  MESSAGE_ALREADY_INITIALIZED = MessageAlreadyInitialized
  MESSAGE_DEPRECATED = MessageDeprecated
  MESSAGE_ENV_NAME_NOT_VALID = MessageEnvNameNotValid
  MESSAGE_NOT_INITIALIZED = MessageNotInitialized
  SHUTDOWN_THREAD = ShutdownThread
  WARNING_MESSAGE_APPLICATION_ID_IS_NULL = WarningMessageApplicationIdIsNull
  isInitialized()Z = IsInitialized
  clearAllData()V = ClearAllData()
  initialize(Landroid/content/Context;Lcom/datadog/android/core/configuration/Credentials;Lcom/datadog/android/core/configuration/Configuration;Lcom/datadog/android/privacy/TrackingConsent;)V = Initialize(Android.Content.Context, Com.Datadog.Android.Core.Configuration.Credentials, Com.Datadog.Android.Core.Configuration.Configuration, Com.Datadog.Android.Privacy.TrackingConsent)
  initialize(Landroid/content/Context;Lcom/datadog/android/DatadogConfig;)V = Initialize(Android.Content.Context, Com.Datadog.Android.DatadogConfig)
  initialize(Landroid/content/Context;Lcom/datadog/android/privacy/TrackingConsent;Lcom/datadog/android/DatadogConfig;)V = Initialize(Android.Content.Context, Com.Datadog.Android.Privacy.TrackingConsent, Com.Datadog.Android.DatadogConfig)
  setTrackingConsent(Lcom/datadog/android/privacy/TrackingConsent;)V = SetTrackingConsent(Com.Datadog.Android.Privacy.TrackingConsent)
  setUserInfo()V = SetUserInfo()
  setUserInfo(Ljava/lang/String;)V = SetUserInfo(string)
  setUserInfo(Ljava/lang/String;Ljava/lang/String;)V = SetUserInfo(string, string)
  setUserInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = SetUserInfo(string, string, string)
  setUserInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V = SetUserInfo(string, string, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  setVerbosity(I)V = SetVerbosity(int)
com/datadog/android/DatadogConfig = Com.Datadog.Android.DatadogConfig
  <init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V = .ctor(Java.Lang.Object, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object, Java.Lang.Object, Kotlin.Jvm.Internal.DefaultConstructorMarker)
com/datadog/android/DatadogEndpoint = Com.Datadog.Android.DatadogEndpoint
  INSTANCE = Instance
  LOGS_EU = LogsEu
  LOGS_GOV = LogsGov
  LOGS_US = LogsUs
  NTP_0 = Ntp0
  NTP_1 = Ntp1
  NTP_2 = Ntp2
  NTP_3 = Ntp3
  RUM_EU = RumEu
  RUM_GOV = RumGov
  RUM_US = RumUs
  TRACES_EU = TracesEu
  TRACES_GOV = TracesGov
  TRACES_US = TracesUs
com/datadog/android/event/EventMapper = Com.Datadog.Android.Event.IEventMapper
  map(Ljava/lang/Object;)Ljava/lang/Object; = Map(Java.Lang.Object)
com/datadog/android/log/LogAttributes = Com.Datadog.Android.Log.LogAttributes
  APPLICATION_PACKAGE = ApplicationPackage
  APPLICATION_VERSION = ApplicationVersion
  DATE = Date
  DB_INSTANCE = DbInstance
  DB_OPERATION = DbOperation
  DB_STATEMENT = DbStatement
  DB_USER = DbUser
  DD_SPAN_ID = DdSpanId
  DD_TRACE_ID = DdTraceId
  DURATION = Duration
  ENV = Env
  ERROR_KIND = ErrorKind
  ERROR_MESSAGE = ErrorMessage
  ERROR_STACK = ErrorStack
  HOST = Host
  HTTP_METHOD = HttpMethod
  HTTP_REFERRER = HttpReferrer
  HTTP_REQUEST_ID = HttpRequestId
  HTTP_STATUS_CODE = HttpStatusCode
  HTTP_URL = HttpUrl
  HTTP_USERAGENT = HttpUseragent
  HTTP_VERSION = HttpVersion
  INSTANCE = Instance
  LOGGER_METHOD_NAME = LoggerMethodName
  LOGGER_NAME = LoggerName
  LOGGER_THREAD_NAME = LoggerThreadName
  LOGGER_VERSION = LoggerVersion
  MESSAGE = Message
  NETWORK_CARRIER_ID = NetworkCarrierId
  NETWORK_CARRIER_NAME = NetworkCarrierName
  NETWORK_CLIENT_IP = NetworkClientIp
  NETWORK_CLIENT_PORT = NetworkClientPort
  NETWORK_CONNECTIVITY = NetworkConnectivity
  NETWORK_DOWN_KBPS = NetworkDownKbps
  NETWORK_SIGNAL_STRENGTH = NetworkSignalStrength
  NETWORK_UP_KBPS = NetworkUpKbps
  RUM_APPLICATION_ID = RumApplicationId
  RUM_SESSION_ID = RumSessionId
  RUM_VIEW_ID = RumViewId
  SERVICE_NAME = ServiceName
  SOURCE = Source
  STATUS = Status
  USR_ATTRIBUTES_GROUP = UsrAttributesGroup
  USR_EMAIL = UsrEmail
  USR_ID = UsrId
  USR_NAME = UsrName
com/datadog/android/log/Logger = Com.Datadog.Android.Log.Logger
  addAttribute(Ljava/lang/String;Z)V = AddAttribute(string, bool)
  addAttribute(Ljava/lang/String;D)V = AddAttribute(string, double)
  addAttribute(Ljava/lang/String;F)V = AddAttribute(string, float)
  addAttribute(Ljava/lang/String;I)V = AddAttribute(string, int)
  addAttribute(Ljava/lang/String;Ljava/lang/String;)V = AddAttribute(string, string)
  addAttribute(Ljava/lang/String;Ljava/util/Date;)V = AddAttribute(string, Java.Util.Date)
  addAttribute(Ljava/lang/String;J)V = AddAttribute(string, long)
  addTag(Ljava/lang/String;)V = AddTag(string)
  addTag(Ljava/lang/String;Ljava/lang/String;)V = AddTag(string, string)
  d(Ljava/lang/String;)V = D(string)
  d(Ljava/lang/String;Ljava/lang/Throwable;)V = D(string, Java.Lang.Throwable)
  d(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = D(string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  e(Ljava/lang/String;)V = E(string)
  e(Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, Java.Lang.Throwable)
  e(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = E(string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  i(Ljava/lang/String;)V = I(string)
  i(Ljava/lang/String;Ljava/lang/Throwable;)V = I(string, Java.Lang.Throwable)
  i(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = I(string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  log(ILjava/lang/String;)V = Log(int, string)
  log(ILjava/lang/String;Ljava/lang/Throwable;)V = Log(int, string, Java.Lang.Throwable)
  log(ILjava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = Log(int, string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  removeAttribute(Ljava/lang/String;)V = RemoveAttribute(string)
  removeTag(Ljava/lang/String;)V = RemoveTag(string)
  removeTagsWithKey(Ljava/lang/String;)V = RemoveTagsWithKey(string)
  v(Ljava/lang/String;)V = V(string)
  v(Ljava/lang/String;Ljava/lang/Throwable;)V = V(string, Java.Lang.Throwable)
  v(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = V(string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  w(Ljava/lang/String;)V = W(string)
  w(Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, Java.Lang.Throwable)
  w(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = W(string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  wtf(Ljava/lang/String;)V = Wtf(string)
  wtf(Ljava/lang/String;Ljava/lang/Throwable;)V = Wtf(string, Java.Lang.Throwable)
  wtf(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Map;)V = Wtf(string, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/datadog/android/plugin/DatadogContext = Com.Datadog.Android.Plugin.DatadogContext
  <init>()V = .ctor()
  <init>(Lcom/datadog/android/plugin/DatadogRumContext;)V = .ctor(Com.Datadog.Android.Plugin.DatadogRumContext)
  getRum()Lcom/datadog/android/plugin/DatadogRumContext; = Rum
  component1()Lcom/datadog/android/plugin/DatadogRumContext; = Component1()
  copy(Lcom/datadog/android/plugin/DatadogRumContext;)Lcom/datadog/android/plugin/DatadogContext; = Copy(Com.Datadog.Android.Plugin.DatadogRumContext)
com/datadog/android/plugin/DatadogPlugin = Com.Datadog.Android.Plugin.IDatadogPlugin
  onContextChanged(Lcom/datadog/android/plugin/DatadogContext;)V = OnContextChanged(Com.Datadog.Android.Plugin.DatadogContext)
  register(Lcom/datadog/android/plugin/DatadogPluginConfig;)V = Register(Com.Datadog.Android.Plugin.DatadogPluginConfig)
  unregister()V = Unregister()
com/datadog/android/plugin/DatadogPluginConfig = Com.Datadog.Android.Plugin.DatadogPluginConfig
  <init>(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/datadog/android/privacy/TrackingConsent;)V = .ctor(Android.Content.Context, string, string, string, Com.Datadog.Android.Privacy.TrackingConsent)
  getContext()Landroid/content/Context; = Context
  getEnvName()Ljava/lang/String; = EnvName
  getFeaturePersistenceDirName()Ljava/lang/String; = FeaturePersistenceDirName
  getServiceName()Ljava/lang/String; = ServiceName
  getTrackingConsent()Lcom/datadog/android/privacy/TrackingConsent; = TrackingConsent
com/datadog/android/plugin/DatadogRumContext = Com.Datadog.Android.Plugin.DatadogRumContext
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getApplicationId()Ljava/lang/String; = ApplicationId
  getSessionId()Ljava/lang/String; = SessionId
  getViewId()Ljava/lang/String; = ViewId
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/String; = Component2()
  component3()Ljava/lang/String; = Component3()
  copy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/datadog/android/plugin/DatadogRumContext; = Copy(string, string, string)
com/datadog/android/plugin/Feature = Com.Datadog.Android.Plugin.Feature
  CRASH = Crash
  LOG = Log
  RUM = Rum
  TRACE = Trace
  getFeatureName()Ljava/lang/String; = FeatureName
  valueOf(Ljava/lang/String;)Lcom/datadog/android/plugin/Feature; = ValueOf(string)
  values()[Lcom/datadog/android/plugin/Feature; = Values()
com/datadog/android/privacy/TrackingConsent = Com.Datadog.Android.Privacy.TrackingConsent
  GRANTED = Granted
  NOT_GRANTED = NotGranted
  PENDING = Pending
  valueOf(Ljava/lang/String;)Lcom/datadog/android/privacy/TrackingConsent; = ValueOf(string)
  values()[Lcom/datadog/android/privacy/TrackingConsent; = Values()
com/datadog/android/privacy/TrackingConsentProviderCallback = Com.Datadog.Android.Privacy.ITrackingConsentProviderCallback
  onConsentUpdated(Lcom/datadog/android/privacy/TrackingConsent;Lcom/datadog/android/privacy/TrackingConsent;)V = OnConsentUpdated(Com.Datadog.Android.Privacy.TrackingConsent, Com.Datadog.Android.Privacy.TrackingConsent)
com/datadog/android/rum/GlobalRum = Com.Datadog.Android.Rum.GlobalRum
  INSTANCE = Instance
  isRegistered()Z = IsRegistered
  addAttribute(Ljava/lang/String;Ljava/lang/Object;)V = AddAttribute(string, Java.Lang.Object)
  get()Lcom/datadog/android/rum/RumMonitor; = Get()
  registerIfAbsent(Lcom/datadog/android/rum/RumMonitor;)Z = RegisterIfAbsent(Com.Datadog.Android.Rum.IRumMonitor)
  registerIfAbsent(Ljava/util/concurrent/Callable;)Z = RegisterIfAbsent(Java.Util.Concurrent.ICallable)
  removeAttribute(Ljava/lang/String;)V = RemoveAttribute(string)
com/datadog/android/rum/internal/domain/event/RumEventSerializerKt = Com.Datadog.Android.Rum.Internal.Domain.Event.RumEventSerializerKt
com/datadog/android/rum/internal/domain/scope/RumEventExtKt = Com.Datadog.Android.Rum.Internal.Domain.Scope.RumEventExtKt
  connect(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ResourceEvent$Connect; = Connect(Java.Lang.Object)
  dns(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ResourceEvent$Dns; = Dns(Java.Lang.Object)
  download(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ResourceEvent$Download; = Download(Java.Lang.Object)
  firstByte(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ResourceEvent$FirstByte; = FirstByte(Java.Lang.Object)
  ssl(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ResourceEvent$Ssl; = Ssl(Java.Lang.Object)
  toErrorConnectivity(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ErrorEvent$Connectivity; = ToErrorConnectivity(Java.Lang.Object)
  toErrorMethod(Ljava/lang/String;)Lcom/datadog/android/rum/model/ErrorEvent$Method; = ToErrorMethod(string)
  toMethod(Ljava/lang/String;)Lcom/datadog/android/rum/model/ResourceEvent$Method; = ToMethod(string)
  toResourceConnectivity(Ljava/lang/Object;)Lcom/datadog/android/rum/model/ResourceEvent$Connectivity; = ToResourceConnectivity(Java.Lang.Object)
  toSchemaSource(Lcom/datadog/android/rum/RumErrorSource;)Lcom/datadog/android/rum/model/ErrorEvent$Source; = ToSchemaSource(Com.Datadog.Android.Rum.RumErrorSource)
  toSchemaType(Lcom/datadog/android/rum/RumActionType;)Lcom/datadog/android/rum/model/ActionEvent$ActionType; = ToSchemaType(Com.Datadog.Android.Rum.RumActionType)
  toSchemaType(Lcom/datadog/android/rum/RumResourceKind;)Lcom/datadog/android/rum/model/ResourceEvent$ResourceType; = ToSchemaType(Com.Datadog.Android.Rum.RumResourceKind)
com/datadog/android/rum/internal/instrumentation/gestures/GesturesUtilsKt = Com.Datadog.Android.Rum.Internal.Instrumentation.Gestures.GesturesUtilsKt
com/datadog/android/rum/model/ActionEvent = Com.Datadog.Android.Rum.Model.ActionEvent
  <init>(JLcom/datadog/android/rum/model/ActionEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ActionEvent$Session;Lcom/datadog/android/rum/model/ActionEvent$View;Lcom/datadog/android/rum/model/ActionEvent$Usr;Lcom/datadog/android/rum/model/ActionEvent$Connectivity;Lcom/datadog/android/rum/model/ActionEvent$Dd;Lcom/datadog/android/rum/model/ActionEvent$Action;)V = .ctor(long, Com.Datadog.Android.Rum.Model.ActionEvent.Application, string, Com.Datadog.Android.Rum.Model.ActionEvent.Session, Com.Datadog.Android.Rum.Model.ActionEvent.View, Com.Datadog.Android.Rum.Model.ActionEvent.Usr, Com.Datadog.Android.Rum.Model.ActionEvent.Connectivity, Com.Datadog.Android.Rum.Model.ActionEvent.Dd, Com.Datadog.Android.Rum.Model.ActionEvent.Action)
  Companion = Companion
  getDate()J = Date
  getService()Ljava/lang/String; = Service
  getType()Ljava/lang/String; = Type
  component1()J = Component1()
  component2()Lcom/datadog/android/rum/model/ActionEvent$Application; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()Lcom/datadog/android/rum/model/ActionEvent$Session; = Component4()
  component5()Lcom/datadog/android/rum/model/ActionEvent$View; = Component5()
  component6()Lcom/datadog/android/rum/model/ActionEvent$Usr; = Component6()
  component7()Lcom/datadog/android/rum/model/ActionEvent$Connectivity; = Component7()
  component8()Lcom/datadog/android/rum/model/ActionEvent$Dd; = Component8()
  component9()Lcom/datadog/android/rum/model/ActionEvent$Action; = Component9()
  copy(JLcom/datadog/android/rum/model/ActionEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ActionEvent$Session;Lcom/datadog/android/rum/model/ActionEvent$View;Lcom/datadog/android/rum/model/ActionEvent$Usr;Lcom/datadog/android/rum/model/ActionEvent$Connectivity;Lcom/datadog/android/rum/model/ActionEvent$Dd;Lcom/datadog/android/rum/model/ActionEvent$Action;)Lcom/datadog/android/rum/model/ActionEvent; = Copy(long, Com.Datadog.Android.Rum.Model.ActionEvent.Application, string, Com.Datadog.Android.Rum.Model.ActionEvent.Session, Com.Datadog.Android.Rum.Model.ActionEvent.View, Com.Datadog.Android.Rum.Model.ActionEvent.Usr, Com.Datadog.Android.Rum.Model.ActionEvent.Connectivity, Com.Datadog.Android.Rum.Model.ActionEvent.Dd, Com.Datadog.Android.Rum.Model.ActionEvent.Action)
  fromJson(Ljava/lang/String;)Lcom/datadog/android/rum/model/ActionEvent; = FromJson(string)
  getAction()Lcom/datadog/android/rum/model/ActionEvent$Action; = GetAction()
  getApplication()Lcom/datadog/android/rum/model/ActionEvent$Application; = GetApplication()
  getConnectivity()Lcom/datadog/android/rum/model/ActionEvent$Connectivity; = GetConnectivity()
  getDd()Lcom/datadog/android/rum/model/ActionEvent$Dd; = GetDd()
  getSession()Lcom/datadog/android/rum/model/ActionEvent$Session; = GetSession()
  getUsr()Lcom/datadog/android/rum/model/ActionEvent$Usr; = GetUsr()
  getView()Lcom/datadog/android/rum/model/ActionEvent$View; = GetView()
com/datadog/android/rum/model/ErrorEvent = Com.Datadog.Android.Rum.Model.ErrorEvent
  <init>(JLcom/datadog/android/rum/model/ErrorEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ErrorEvent$Session;Lcom/datadog/android/rum/model/ErrorEvent$View;Lcom/datadog/android/rum/model/ErrorEvent$Usr;Lcom/datadog/android/rum/model/ErrorEvent$Connectivity;Lcom/datadog/android/rum/model/ErrorEvent$Dd;Lcom/datadog/android/rum/model/ErrorEvent$Error;Lcom/datadog/android/rum/model/ErrorEvent$Action;)V = .ctor(long, Com.Datadog.Android.Rum.Model.ErrorEvent.Application, string, Com.Datadog.Android.Rum.Model.ErrorEvent.Session, Com.Datadog.Android.Rum.Model.ErrorEvent.View, Com.Datadog.Android.Rum.Model.ErrorEvent.Usr, Com.Datadog.Android.Rum.Model.ErrorEvent.Connectivity, Com.Datadog.Android.Rum.Model.ErrorEvent.Dd, Com.Datadog.Android.Rum.Model.ErrorEvent.Error, Com.Datadog.Android.Rum.Model.ErrorEvent.Action)
  Companion = Companion
  getDate()J = Date
  getService()Ljava/lang/String; = Service
  getType()Ljava/lang/String; = Type
  component1()J = Component1()
  component10()Lcom/datadog/android/rum/model/ErrorEvent$Action; = Component10()
  component2()Lcom/datadog/android/rum/model/ErrorEvent$Application; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()Lcom/datadog/android/rum/model/ErrorEvent$Session; = Component4()
  component5()Lcom/datadog/android/rum/model/ErrorEvent$View; = Component5()
  component6()Lcom/datadog/android/rum/model/ErrorEvent$Usr; = Component6()
  component7()Lcom/datadog/android/rum/model/ErrorEvent$Connectivity; = Component7()
  component8()Lcom/datadog/android/rum/model/ErrorEvent$Dd; = Component8()
  component9()Lcom/datadog/android/rum/model/ErrorEvent$Error; = Component9()
  copy(JLcom/datadog/android/rum/model/ErrorEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ErrorEvent$Session;Lcom/datadog/android/rum/model/ErrorEvent$View;Lcom/datadog/android/rum/model/ErrorEvent$Usr;Lcom/datadog/android/rum/model/ErrorEvent$Connectivity;Lcom/datadog/android/rum/model/ErrorEvent$Dd;Lcom/datadog/android/rum/model/ErrorEvent$Error;Lcom/datadog/android/rum/model/ErrorEvent$Action;)Lcom/datadog/android/rum/model/ErrorEvent; = Copy(long, Com.Datadog.Android.Rum.Model.ErrorEvent.Application, string, Com.Datadog.Android.Rum.Model.ErrorEvent.Session, Com.Datadog.Android.Rum.Model.ErrorEvent.View, Com.Datadog.Android.Rum.Model.ErrorEvent.Usr, Com.Datadog.Android.Rum.Model.ErrorEvent.Connectivity, Com.Datadog.Android.Rum.Model.ErrorEvent.Dd, Com.Datadog.Android.Rum.Model.ErrorEvent.Error, Com.Datadog.Android.Rum.Model.ErrorEvent.Action)
  fromJson(Ljava/lang/String;)Lcom/datadog/android/rum/model/ErrorEvent; = FromJson(string)
  getAction()Lcom/datadog/android/rum/model/ErrorEvent$Action; = GetAction()
  getApplication()Lcom/datadog/android/rum/model/ErrorEvent$Application; = GetApplication()
  getConnectivity()Lcom/datadog/android/rum/model/ErrorEvent$Connectivity; = GetConnectivity()
  getDd()Lcom/datadog/android/rum/model/ErrorEvent$Dd; = GetDd()
  getError()Lcom/datadog/android/rum/model/ErrorEvent$Error; = GetError()
  getSession()Lcom/datadog/android/rum/model/ErrorEvent$Session; = GetSession()
  getUsr()Lcom/datadog/android/rum/model/ErrorEvent$Usr; = GetUsr()
  getView()Lcom/datadog/android/rum/model/ErrorEvent$View; = GetView()
com/datadog/android/rum/model/ResourceEvent = Com.Datadog.Android.Rum.Model.ResourceEvent
  <init>(JLcom/datadog/android/rum/model/ResourceEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ResourceEvent$Session;Lcom/datadog/android/rum/model/ResourceEvent$View;Lcom/datadog/android/rum/model/ResourceEvent$Usr;Lcom/datadog/android/rum/model/ResourceEvent$Connectivity;Lcom/datadog/android/rum/model/ResourceEvent$Dd;Lcom/datadog/android/rum/model/ResourceEvent$Resource;Lcom/datadog/android/rum/model/ResourceEvent$Action;)V = .ctor(long, Com.Datadog.Android.Rum.Model.ResourceEvent.Application, string, Com.Datadog.Android.Rum.Model.ResourceEvent.Session, Com.Datadog.Android.Rum.Model.ResourceEvent.View, Com.Datadog.Android.Rum.Model.ResourceEvent.Usr, Com.Datadog.Android.Rum.Model.ResourceEvent.Connectivity, Com.Datadog.Android.Rum.Model.ResourceEvent.Dd, Com.Datadog.Android.Rum.Model.ResourceEvent.Resource, Com.Datadog.Android.Rum.Model.ResourceEvent.Action)
  Companion = Companion
  getDate()J = Date
  getService()Ljava/lang/String; = Service
  getType()Ljava/lang/String; = Type
  component1()J = Component1()
  component10()Lcom/datadog/android/rum/model/ResourceEvent$Action; = Component10()
  component2()Lcom/datadog/android/rum/model/ResourceEvent$Application; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()Lcom/datadog/android/rum/model/ResourceEvent$Session; = Component4()
  component5()Lcom/datadog/android/rum/model/ResourceEvent$View; = Component5()
  component6()Lcom/datadog/android/rum/model/ResourceEvent$Usr; = Component6()
  component7()Lcom/datadog/android/rum/model/ResourceEvent$Connectivity; = Component7()
  component8()Lcom/datadog/android/rum/model/ResourceEvent$Dd; = Component8()
  component9()Lcom/datadog/android/rum/model/ResourceEvent$Resource; = Component9()
  copy(JLcom/datadog/android/rum/model/ResourceEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ResourceEvent$Session;Lcom/datadog/android/rum/model/ResourceEvent$View;Lcom/datadog/android/rum/model/ResourceEvent$Usr;Lcom/datadog/android/rum/model/ResourceEvent$Connectivity;Lcom/datadog/android/rum/model/ResourceEvent$Dd;Lcom/datadog/android/rum/model/ResourceEvent$Resource;Lcom/datadog/android/rum/model/ResourceEvent$Action;)Lcom/datadog/android/rum/model/ResourceEvent; = Copy(long, Com.Datadog.Android.Rum.Model.ResourceEvent.Application, string, Com.Datadog.Android.Rum.Model.ResourceEvent.Session, Com.Datadog.Android.Rum.Model.ResourceEvent.View, Com.Datadog.Android.Rum.Model.ResourceEvent.Usr, Com.Datadog.Android.Rum.Model.ResourceEvent.Connectivity, Com.Datadog.Android.Rum.Model.ResourceEvent.Dd, Com.Datadog.Android.Rum.Model.ResourceEvent.Resource, Com.Datadog.Android.Rum.Model.ResourceEvent.Action)
  fromJson(Ljava/lang/String;)Lcom/datadog/android/rum/model/ResourceEvent; = FromJson(string)
  getAction()Lcom/datadog/android/rum/model/ResourceEvent$Action; = GetAction()
  getApplication()Lcom/datadog/android/rum/model/ResourceEvent$Application; = GetApplication()
  getConnectivity()Lcom/datadog/android/rum/model/ResourceEvent$Connectivity; = GetConnectivity()
  getDd()Lcom/datadog/android/rum/model/ResourceEvent$Dd; = GetDd()
  getResource()Lcom/datadog/android/rum/model/ResourceEvent$Resource; = GetResource()
  getSession()Lcom/datadog/android/rum/model/ResourceEvent$Session; = GetSession()
  getUsr()Lcom/datadog/android/rum/model/ResourceEvent$Usr; = GetUsr()
  getView()Lcom/datadog/android/rum/model/ResourceEvent$View; = GetView()
com/datadog/android/rum/model/ViewEvent = Com.Datadog.Android.Rum.Model.ViewEvent
  <init>(JLcom/datadog/android/rum/model/ViewEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ViewEvent$Session;Lcom/datadog/android/rum/model/ViewEvent$View;Lcom/datadog/android/rum/model/ViewEvent$Usr;Lcom/datadog/android/rum/model/ViewEvent$Connectivity;Lcom/datadog/android/rum/model/ViewEvent$Dd;)V = .ctor(long, Com.Datadog.Android.Rum.Model.ViewEvent.Application, string, Com.Datadog.Android.Rum.Model.ViewEvent.Session, Com.Datadog.Android.Rum.Model.ViewEvent.View, Com.Datadog.Android.Rum.Model.ViewEvent.Usr, Com.Datadog.Android.Rum.Model.ViewEvent.Connectivity, Com.Datadog.Android.Rum.Model.ViewEvent.Dd)
  Companion = Companion
  getDate()J = Date
  getService()Ljava/lang/String; = Service
  component1()J = Component1()
  component2()Lcom/datadog/android/rum/model/ViewEvent$Application; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()Lcom/datadog/android/rum/model/ViewEvent$Session; = Component4()
  component5()Lcom/datadog/android/rum/model/ViewEvent$View; = Component5()
  component6()Lcom/datadog/android/rum/model/ViewEvent$Usr; = Component6()
  component7()Lcom/datadog/android/rum/model/ViewEvent$Connectivity; = Component7()
  component8()Lcom/datadog/android/rum/model/ViewEvent$Dd; = Component8()
  copy(JLcom/datadog/android/rum/model/ViewEvent$Application;Ljava/lang/String;Lcom/datadog/android/rum/model/ViewEvent$Session;Lcom/datadog/android/rum/model/ViewEvent$View;Lcom/datadog/android/rum/model/ViewEvent$Usr;Lcom/datadog/android/rum/model/ViewEvent$Connectivity;Lcom/datadog/android/rum/model/ViewEvent$Dd;)Lcom/datadog/android/rum/model/ViewEvent; = Copy(long, Com.Datadog.Android.Rum.Model.ViewEvent.Application, string, Com.Datadog.Android.Rum.Model.ViewEvent.Session, Com.Datadog.Android.Rum.Model.ViewEvent.View, Com.Datadog.Android.Rum.Model.ViewEvent.Usr, Com.Datadog.Android.Rum.Model.ViewEvent.Connectivity, Com.Datadog.Android.Rum.Model.ViewEvent.Dd)
  fromJson(Ljava/lang/String;)Lcom/datadog/android/rum/model/ViewEvent; = FromJson(string)
  getApplication()Lcom/datadog/android/rum/model/ViewEvent$Application; = GetApplication()
  getConnectivity()Lcom/datadog/android/rum/model/ViewEvent$Connectivity; = GetConnectivity()
  getDd()Lcom/datadog/android/rum/model/ViewEvent$Dd; = GetDd()
  getSession()Lcom/datadog/android/rum/model/ViewEvent$Session; = GetSession()
  getType()Ljava/lang/String; = GetType()
  getUsr()Lcom/datadog/android/rum/model/ViewEvent$Usr; = GetUsr()
  getView()Lcom/datadog/android/rum/model/ViewEvent$View; = GetView()
com/datadog/android/rum/resource/RumResourceInputStream = Com.Datadog.Android.Rum.Resource.RumResourceInputStream
  <init>(Ljava/io/InputStream;Ljava/lang/String;)V = .ctor(System.IO.Stream, string)
  Companion = Companion
  ERROR_CLOSE = ErrorClose
  ERROR_MARK = ErrorMark
  ERROR_READ = ErrorRead
  ERROR_RESET = ErrorReset
  ERROR_SKIP = ErrorSkip
  METHOD = Method
  getDelegate()Ljava/io/InputStream; = Delegate
  getUrl()Ljava/lang/String; = Url
  read()I = Read()
com/datadog/android/rum/RumActionType = Com.Datadog.Android.Rum.RumActionType
  CLICK = Click
  CUSTOM = Custom
  SCROLL = Scroll
  SWIPE = Swipe
  TAP = Tap
  valueOf(Ljava/lang/String;)Lcom/datadog/android/rum/RumActionType; = ValueOf(string)
  values()[Lcom/datadog/android/rum/RumActionType; = Values()
com/datadog/android/rum/RumAttributes = Com.Datadog.Android.Rum.RumAttributes
  ACTION_GESTURE_DIRECTION = ActionGestureDirection
  ACTION_TARGET_CLASS_NAME = ActionTargetClassName
  ACTION_TARGET_PARENT_CLASSNAME = ActionTargetParentClassname
  ACTION_TARGET_PARENT_INDEX = ActionTargetParentIndex
  ACTION_TARGET_PARENT_RESOURCE_ID = ActionTargetParentResourceId
  ACTION_TARGET_RESOURCE_ID = ActionTargetResourceId
  ACTION_TARGET_TITLE = ActionTargetTitle
  APPLICATION_VERSION = ApplicationVersion
  ENV = Env
  ERROR_DATABASE_PATH = ErrorDatabasePath
  ERROR_DATABASE_VERSION = ErrorDatabaseVersion
  ERROR_RESOURCE_METHOD = ErrorResourceMethod
  ERROR_RESOURCE_STATUS_CODE = ErrorResourceStatusCode
  ERROR_RESOURCE_URL = ErrorResourceUrl
  INSTANCE = Instance
  INTERNAL_ERROR_TYPE = InternalErrorType
  INTERNAL_TIMESTAMP = InternalTimestamp
  NETWORK_BYTES_READ = NetworkBytesRead
  NETWORK_CARRIER_ID = NetworkCarrierId
  NETWORK_CARRIER_NAME = NetworkCarrierName
  NETWORK_CONNECTIVITY = NetworkConnectivity
  NETWORK_DOWN_KBPS = NetworkDownKbps
  NETWORK_SIGNAL_STRENGTH = NetworkSignalStrength
  NETWORK_UP_KBPS = NetworkUpKbps
  SDK_VERSION = SdkVersion
  SERVICE_NAME = ServiceName
  SOURCE = Source
  SPAN_ID = SpanId
  TRACE_ID = TraceId
  VARIANT = Variant
com/datadog/android/rum/RumErrorSource = Com.Datadog.Android.Rum.RumErrorSource
  AGENT = Agent
  CONSOLE = Console
  LOGGER = Logger
  NETWORK = Network
  SOURCE = Source
  WEBVIEW = Webview
  valueOf(Ljava/lang/String;)Lcom/datadog/android/rum/RumErrorSource; = ValueOf(string)
  values()[Lcom/datadog/android/rum/RumErrorSource; = Values()
com/datadog/android/rum/RumMonitor = Com.Datadog.Android.Rum.IRumMonitor
  addError(Ljava/lang/String;Lcom/datadog/android/rum/RumErrorSource;Ljava/lang/Throwable;Ljava/util/Map;)V = AddError(string, Com.Datadog.Android.Rum.RumErrorSource, Java.Lang.Throwable, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  addErrorWithStacktrace(Ljava/lang/String;Lcom/datadog/android/rum/RumErrorSource;Ljava/lang/String;Ljava/util/Map;)V = AddErrorWithStacktrace(string, Com.Datadog.Android.Rum.RumErrorSource, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  addTiming(Ljava/lang/String;)V = AddTiming(string)
  addUserAction(Lcom/datadog/android/rum/RumActionType;Ljava/lang/String;Ljava/util/Map;)V = AddUserAction(Com.Datadog.Android.Rum.RumActionType, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  startResource(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V = StartResource(string, string, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  startUserAction(Lcom/datadog/android/rum/RumActionType;Ljava/lang/String;Ljava/util/Map;)V = StartUserAction(Com.Datadog.Android.Rum.RumActionType, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  startView(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Map;)V = StartView(Java.Lang.Object, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  stopResource(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Long;Lcom/datadog/android/rum/RumResourceKind;Ljava/util/Map;)V = StopResource(string, Java.Lang.Integer, Java.Lang.Long, Com.Datadog.Android.Rum.RumResourceKind, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  stopResourceWithError(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Lcom/datadog/android/rum/RumErrorSource;Ljava/lang/Throwable;)V = StopResourceWithError(string, Java.Lang.Integer, string, Com.Datadog.Android.Rum.RumErrorSource, Java.Lang.Throwable)
  stopUserAction(Lcom/datadog/android/rum/RumActionType;Ljava/lang/String;Ljava/util/Map;)V = StopUserAction(Com.Datadog.Android.Rum.RumActionType, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  stopUserAction(Ljava/util/Map;)V = StopUserAction(System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  stopView(Ljava/lang/Object;Ljava/util/Map;)V = StopView(Java.Lang.Object, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/datadog/android/rum/RumResourceKind = Com.Datadog.Android.Rum.RumResourceKind
  BEACON = Beacon
  Companion = Companion
  CSS = Css
  DOCUMENT = Document
  FETCH = Fetch
  FONT = Font
  IMAGE = Image
  JS = Js
  MEDIA = Media
  OTHER = Other
  UNKNOWN = Unknown
  XHR = Xhr
  getValue()Ljava/lang/String; = Value
  valueOf(Ljava/lang/String;)Lcom/datadog/android/rum/RumResourceKind; = ValueOf(string)
  values()[Lcom/datadog/android/rum/RumResourceKind; = Values()
com/datadog/android/rum/tracking/AcceptAllActivities = Com.Datadog.Android.Rum.Tracking.AcceptAllActivities
  <init>()V = .ctor()
  accept(Landroid/app/Activity;)Z = Accept(Android.App.Activity)
  getViewName(Landroid/app/Activity;)Ljava/lang/String; = GetViewName(Android.App.Activity)
com/datadog/android/rum/tracking/AcceptAllDefaultFragment = Com.Datadog.Android.Rum.Tracking.AcceptAllDefaultFragment
  <init>()V = .ctor()
  accept(Landroid/app/Fragment;)Z = Accept(Android.App.Fragment)
  getViewName(Landroid/app/Fragment;)Ljava/lang/String; = GetViewName(Android.App.Fragment)
com/datadog/android/rum/tracking/ActivityLifecycleTrackingStrategy = Com.Datadog.Android.Rum.Tracking.ActivityLifecycleTrackingStrategy
  <init>()V = .ctor()
  ARGUMENT_TAG = ArgumentTag
  Companion = Companion
  convertToRumAttributes(Landroid/os/Bundle;)Ljava/util/Map; = ConvertToRumAttributes(Android.OS.Bundle)
  onActivityCreated(Landroid/app/Activity;Landroid/os/Bundle;)V = OnActivityCreated(Android.App.Activity, Android.OS.Bundle)
  onActivityDestroyed(Landroid/app/Activity;)V = OnActivityDestroyed(Android.App.Activity)
  onActivityPaused(Landroid/app/Activity;)V = OnActivityPaused(Android.App.Activity)
  onActivityPostResumed(Landroid/app/Activity;)V = OnActivityPostResumed(Android.App.Activity)
  onActivityResumed(Landroid/app/Activity;)V = OnActivityResumed(Android.App.Activity)
  onActivitySaveInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V = OnActivitySaveInstanceState(Android.App.Activity, Android.OS.Bundle)
  onActivityStarted(Landroid/app/Activity;)V = OnActivityStarted(Android.App.Activity)
  onActivityStopped(Landroid/app/Activity;)V = OnActivityStopped(Android.App.Activity)
  register(Landroid/content/Context;)V = Register(Android.Content.Context)
  unregister(Landroid/content/Context;)V = Unregister(Android.Content.Context)
com/datadog/android/rum/tracking/ActivityViewTrackingStrategy = Com.Datadog.Android.Rum.Tracking.ActivityViewTrackingStrategy
  <init>(Z)V = .ctor(bool)
  <init>(ZLcom/datadog/android/rum/tracking/ComponentPredicate;)V = .ctor(bool, Com.Datadog.Android.Rum.Tracking.IComponentPredicate)
  onActivityPostResumed(Landroid/app/Activity;)V = OnActivityPostResumed(Android.App.Activity)
com/datadog/android/rum/tracking/ComponentPredicate = Com.Datadog.Android.Rum.Tracking.IComponentPredicate
  accept(Ljava/lang/Object;)Z = Accept(Java.Lang.Object)
  getViewName(Ljava/lang/Object;)Ljava/lang/String; = GetViewName(Java.Lang.Object)
com/datadog/android/rum/tracking/FragmentViewTrackingStrategy = Com.Datadog.Android.Rum.Tracking.FragmentViewTrackingStrategy
  <init>(Z)V = .ctor(bool)
com/datadog/android/rum/tracking/MixedViewTrackingStrategy = Com.Datadog.Android.Rum.Tracking.MixedViewTrackingStrategy
  <init>(Z)V = .ctor(bool)
  <init>(ZLcom/datadog/android/rum/tracking/ComponentPredicate;)V = .ctor(bool, Com.Datadog.Android.Rum.Tracking.IComponentPredicate)
com/datadog/android/rum/tracking/TrackingStrategy = Com.Datadog.Android.Rum.Tracking.ITrackingStrategy
  register(Landroid/content/Context;)V = Register(Android.Content.Context)
  unregister(Landroid/content/Context;)V = Unregister(Android.Content.Context)
com/datadog/android/rum/tracking/ViewAttributesProvider = Com.Datadog.Android.Rum.Tracking.IViewAttributesProvider
  extractAttributes(Landroid/view/View;Ljava/util/Map;)V = ExtractAttributes(Android.Views.View, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/datadog/android/rum/tracking/ViewTrackingStrategy = Com.Datadog.Android.Rum.Tracking.IViewTrackingStrategy
com/datadog/android/rum/webview/RumWebChromeClient = Com.Datadog.Android.Rum.Webview.RumWebChromeClient
  <init>()V = .ctor()
  Companion = Companion
  LOGGER_NAME = LoggerName
  SOURCE_ID = SourceId
  SOURCE_LINE = SourceLine
com/datadog/android/rum/webview/RumWebViewClient = Com.Datadog.Android.Rum.Webview.RumWebViewClient
  <init>()V = .ctor()
  Companion = Companion
  METHOD_GET = MethodGet
  ORIGIN = Origin
com/datadog/android/sqlite/DatadogDatabaseErrorHandler = Com.Datadog.Android.Sqlite.DatadogDatabaseErrorHandler
  <init>()V = .ctor()
  <init>(Landroid/database/DatabaseErrorHandler;)V = .ctor(Android.Database.IDatabaseErrorHandler)
  Companion = Companion
  DATABASE_CORRUPTION_ERROR_MESSAGE = DatabaseCorruptionErrorMessage
  onCorruption(Landroid/database/sqlite/SQLiteDatabase;)V = OnCorruption(Android.Database.Sqlite.SQLiteDatabase)
com/datadog/android/tracing/internal/utils/TracerExtensionsKt = Com.Datadog.Android.Tracing.Internal.Utils.TracerExtensionsKt
com/datadog/android/tracing/TracedRequestListener = Com.Datadog.Android.Tracing.ITracedRequestListener
com/datadog/exec/CommonTaskExecutor = Com.Datadog.Exec.CommonTaskExecutor
  INSTANCE = Instance
  isShutdown()Z = IsShutdown
  isTerminated()Z = IsTerminated
  awaitTermination(JLjava/util/concurrent/TimeUnit;)Z = AwaitTermination(long, Java.Util.Concurrent.TimeUnit)
  execute(Ljava/lang/Runnable;)V = Execute(Java.Lang.IRunnable)
  scheduleAtFixedRate(Lcom/datadog/exec/CommonTaskExecutor$Task;Ljava/lang/Object;JJLjava/util/concurrent/TimeUnit;Ljava/lang/String;)Ljava/util/concurrent/ScheduledFuture; = ScheduleAtFixedRate(Com.Datadog.Exec.CommonTaskExecutor.ITask, Java.Lang.Object, long, long, Java.Util.Concurrent.TimeUnit, string)
  shutdown()V = Shutdown()
  shutdownNow()Ljava/util/List; = ShutdownNow()
com/datadog/exec/DaemonThreadFactory = Com.Datadog.Exec.DaemonThreadFactory
  <init>(Ljava/lang/String;)V = .ctor(string)
  TASK_SCHEDULER = TaskScheduler
  TRACE_PROCESSOR = TraceProcessor
  TRACE_WRITER = TraceWriter
  newThread(Ljava/lang/Runnable;)Ljava/lang/Thread; = NewThread(Java.Lang.IRunnable)
com/datadog/opentracing/DDTraceOTInfo = Com.Datadog.Opentracing.DDTraceOTInfo
  <init>()V = .ctor()
  JAVA_VERSION = JavaVersion
  JAVA_VM_NAME = JavaVmName
  JAVA_VM_VENDOR = JavaVmVendor
  VERSION = Version
  main([Ljava/lang/String;)V = Main(params string[])
com/datadog/opentracing/decorators/AbstractDecorator = Com.Datadog.Opentracing.Decorators.AbstractDecorator
  <init>()V = .ctor()
  getMatchingTag()Ljava/lang/String; = MatchingTag
  setMatchingTag(Ljava/lang/String;)V = MatchingTag
  getMatchingValue()Ljava/lang/Object; = MatchingValue
  setMatchingValue(Ljava/lang/Object;)V = MatchingValue
  getReplacementTag()Ljava/lang/String; = ReplacementTag
  setReplacementTag(Ljava/lang/String;)V = ReplacementTag
  getReplacementValue()Ljava/lang/String; = ReplacementValue
  setReplacementValue(Ljava/lang/String;)V = ReplacementValue
com/datadog/opentracing/decorators/DBTypeDecorator = Com.Datadog.Opentracing.Decorators.DBTypeDecorator
  <init>()V = .ctor()
com/datadog/opentracing/decorators/DDDecoratorsFactory = Com.Datadog.Opentracing.Decorators.DDDecoratorsFactory
  <init>()V = .ctor()
  createBuiltinDecorators()Ljava/util/List; = CreateBuiltinDecorators()
com/datadog/opentracing/decorators/ForceManualDropDecorator = Com.Datadog.Opentracing.Decorators.ForceManualDropDecorator
  <init>()V = .ctor()
com/datadog/opentracing/decorators/ForceManualKeepDecorator = Com.Datadog.Opentracing.Decorators.ForceManualKeepDecorator
  <init>()V = .ctor()
com/datadog/opentracing/decorators/PeerServiceDecorator = Com.Datadog.Opentracing.Decorators.PeerServiceDecorator
  <init>()V = .ctor()
com/datadog/opentracing/decorators/ServiceNameDecorator = Com.Datadog.Opentracing.Decorators.ServiceNameDecorator
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Z)V = .ctor(string, bool)
com/datadog/opentracing/decorators/ServletContextDecorator = Com.Datadog.Opentracing.Decorators.ServletContextDecorator
  <init>()V = .ctor()
com/datadog/opentracing/DefaultLogHandler = Com.Datadog.Opentracing.DefaultLogHandler
  <init>()V = .ctor()
com/datadog/opentracing/jfr/DDNoopScopeEvent = Com.Datadog.Opentracing.Jfr.DDNoopScopeEvent
  <init>()V = .ctor()
  INSTANCE = Instance
  finish()V = Finish()
  start()V = Start()
com/datadog/opentracing/jfr/DDNoopScopeEventFactory = Com.Datadog.Opentracing.Jfr.DDNoopScopeEventFactory
  <init>()V = .ctor()
com/datadog/opentracing/jfr/DDScopeEvent = Com.Datadog.Opentracing.Jfr.IDDScopeEvent
  finish()V = Finish()
  start()V = Start()
com/datadog/opentracing/jfr/DDScopeEventFactory = Com.Datadog.Opentracing.Jfr.IDDScopeEventFactory
com/datadog/opentracing/LogHandler = Com.Datadog.Opentracing.ILogHandler
com/datadog/opentracing/propagation/HaystackHttpCodec = Com.Datadog.Opentracing.Propagation.HaystackHttpCodec
com/datadog/opentracing/propagation/HttpCodec = Com.Datadog.Opentracing.Propagation.HttpCodec
  <init>()V = .ctor()
  createExtractor(Lcom/datadog/trace/api/Config;Ljava/util/Map;)Lcom/datadog/opentracing/propagation/HttpCodec$Extractor; = CreateExtractor(Com.Datadog.Trace.Api.Config, System.Collections.Generic.IDictionary<string, string>)
  createInjector(Lcom/datadog/trace/api/Config;)Lcom/datadog/opentracing/propagation/HttpCodec$Injector; = CreateInjector(Com.Datadog.Trace.Api.Config)
com/datadog/opentracing/StringCachingBigInteger = Com.Datadog.Opentracing.StringCachingBigInteger
  <init>([B)V = .ctor(byte[])
  <init>(I[B)V = .ctor(int, byte[])
  <init>(IILjava/util/Random;)V = .ctor(int, int, Java.Util.Random)
  <init>(ILjava/util/Random;)V = .ctor(int, Java.Util.Random)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
com/datadog/tools/annotation/NoOpImplementation = Com.Datadog.Tools.Annotation.INoOpImplementation
com/datadog/trace/api/Config = Com.Datadog.Trace.Api.Config
  AGENT_HOST = AgentHost
  AGENT_PORT_LEGACY = AgentPortLegacy
  AGENT_UNIX_DOMAIN_SOCKET = AgentUnixDomainSocket
  API_KEY = ApiKey
  API_KEY_FILE = ApiKeyFile
  CONFIGURATION_FILE = ConfigurationFile
  DB_CLIENT_HOST_SPLIT_BY_INSTANCE = DbClientHostSplitByInstance
  DD_AGENT_WRITER_TYPE = DdAgentWriterType
  DEFAULT_AGENT_HOST = DefaultAgentHost
  DEFAULT_AGENT_UNIX_DOMAIN_SOCKET = DefaultAgentUnixDomainSocket
  DEFAULT_ANALYTICS_SAMPLE_RATE = DefaultAnalyticsSampleRate
  DEFAULT_INTEGRATIONS_ENABLED = DefaultIntegrationsEnabled
  DEFAULT_JMX_FETCH_STATSD_PORT = DefaultJmxFetchStatsdPort
  DEFAULT_LOGS_INJECTION_ENABLED = DefaultLogsInjectionEnabled
  DEFAULT_METRICS_ENABLED = DefaultMetricsEnabled
  DEFAULT_PROFILING_ENABLED = DefaultProfilingEnabled
  DEFAULT_PROFILING_EXCEPTION_HISTOGRAM_MAX_COLLECTION_SIZE = DefaultProfilingExceptionHistogramMaxCollectionSize
  DEFAULT_PROFILING_EXCEPTION_HISTOGRAM_TOP_ITEMS = DefaultProfilingExceptionHistogramTopItems
  DEFAULT_PROFILING_EXCEPTION_SAMPLE_LIMIT = DefaultProfilingExceptionSampleLimit
  DEFAULT_PROFILING_PROXY_PORT = DefaultProfilingProxyPort
  DEFAULT_PROFILING_START_DELAY = DefaultProfilingStartDelay
  DEFAULT_PROFILING_START_FORCE_FIRST = DefaultProfilingStartForceFirst
  DEFAULT_PROFILING_UPLOAD_COMPRESSION = DefaultProfilingUploadCompression
  DEFAULT_PROFILING_UPLOAD_PERIOD = DefaultProfilingUploadPeriod
  DEFAULT_PROFILING_UPLOAD_TIMEOUT = DefaultProfilingUploadTimeout
  DEFAULT_SERVICE_NAME = DefaultServiceName
  DEFAULT_SITE = DefaultSite
  DEFAULT_TRACE_AGENT_PORT = DefaultTraceAgentPort
  DEFAULT_TRACE_ANALYTICS_ENABLED = DefaultTraceAnalyticsEnabled
  DEFAULT_TRACE_RATE_LIMIT = DefaultTraceRateLimit
  GLOBAL_TAGS = GlobalTags
  HEADER_TAGS = HeaderTags
  HEALTH_METRICS_ENABLED = HealthMetricsEnabled
  HEALTH_METRICS_STATSD_HOST = HealthMetricsStatsdHost
  HEALTH_METRICS_STATSD_PORT = HealthMetricsStatsdPort
  HOST_TAG = HostTag
  HTTP_CLIENT_ERROR_STATUSES = HttpClientErrorStatuses
  HTTP_CLIENT_HOST_SPLIT_BY_DOMAIN = HttpClientHostSplitByDomain
  HTTP_CLIENT_TAG_QUERY_STRING = HttpClientTagQueryString
  HTTP_SERVER_ERROR_STATUSES = HttpServerErrorStatuses
  HTTP_SERVER_TAG_QUERY_STRING = HttpServerTagQueryString
  INTEGRATIONS_ENABLED = IntegrationsEnabled
  JMX_FETCH_CHECK_PERIOD = JmxFetchCheckPeriod
  JMX_FETCH_CONFIG = JmxFetchConfig
  JMX_FETCH_CONFIG_DIR = JmxFetchConfigDir
  JMX_FETCH_ENABLED = JmxFetchEnabled
  JMX_FETCH_METRICS_CONFIGS = JmxFetchMetricsConfigs
  JMX_FETCH_REFRESH_BEANS_PERIOD = JmxFetchRefreshBeansPeriod
  JMX_FETCH_STATSD_HOST = JmxFetchStatsdHost
  JMX_FETCH_STATSD_PORT = JmxFetchStatsdPort
  JMX_TAGS = JmxTags
  LANGUAGE_TAG_KEY = LanguageTagKey
  LANGUAGE_TAG_VALUE = LanguageTagValue
  LOGGING_WRITER_TYPE = LoggingWriterType
  LOGS_INJECTION_ENABLED = LogsInjectionEnabled
  PARTIAL_FLUSH_MIN_SPANS = PartialFlushMinSpans
  PRIORITY_SAMPLING = PrioritySampling
  PROFILING_API_KEY_FILE_OLD = ProfilingApiKeyFileOld
  PROFILING_API_KEY_FILE_VERY_OLD = ProfilingApiKeyFileVeryOld
  PROFILING_API_KEY_OLD = ProfilingApiKeyOld
  PROFILING_API_KEY_VERY_OLD = ProfilingApiKeyVeryOld
  PROFILING_ENABLED = ProfilingEnabled
  PROFILING_EXCEPTION_HISTOGRAM_MAX_COLLECTION_SIZE = ProfilingExceptionHistogramMaxCollectionSize
  PROFILING_EXCEPTION_HISTOGRAM_TOP_ITEMS = ProfilingExceptionHistogramTopItems
  PROFILING_EXCEPTION_SAMPLE_LIMIT = ProfilingExceptionSampleLimit
  PROFILING_PROXY_HOST = ProfilingProxyHost
  PROFILING_PROXY_PASSWORD = ProfilingProxyPassword
  PROFILING_PROXY_PORT = ProfilingProxyPort
  PROFILING_PROXY_USERNAME = ProfilingProxyUsername
  PROFILING_START_DELAY = ProfilingStartDelay
  PROFILING_START_FORCE_FIRST = ProfilingStartForceFirst
  PROFILING_TAGS = ProfilingTags
  PROFILING_TEMPLATE_OVERRIDE_FILE = ProfilingTemplateOverrideFile
  PROFILING_UPLOAD_COMPRESSION = ProfilingUploadCompression
  PROFILING_UPLOAD_PERIOD = ProfilingUploadPeriod
  PROFILING_UPLOAD_TIMEOUT = ProfilingUploadTimeout
  PROFILING_URL = ProfilingUrl
  PROFILING_URL_TEMPLATE = ProfilingUrlTemplate
  PROPAGATION_STYLE_EXTRACT = PropagationStyleExtract
  PROPAGATION_STYLE_INJECT = PropagationStyleInject
  RUNTIME_CONTEXT_FIELD_INJECTION = RuntimeContextFieldInjection
  RUNTIME_ID_TAG = RuntimeIdTag
  SCOPE_DEPTH_LIMIT = ScopeDepthLimit
  SERVICE = Service
  SERVICE_MAPPING = ServiceMapping
  SERVICE_NAME = ServiceName
  SERVICE_TAG = ServiceTag
  SITE = Site
  SPAN_TAGS = SpanTags
  SPLIT_BY_TAGS = SplitByTags
  TAGS = Tags
  TRACE_AGENT_PORT = TraceAgentPort
  TRACE_ANALYTICS_ENABLED = TraceAnalyticsEnabled
  TRACE_ANNOTATIONS = TraceAnnotations
  TRACE_CLASSES_EXCLUDE = TraceClassesExclude
  TRACE_ENABLED = TraceEnabled
  TRACE_EXECUTORS = TraceExecutors
  TRACE_EXECUTORS_ALL = TraceExecutorsAll
  TRACE_METHODS = TraceMethods
  TRACE_RATE_LIMIT = TraceRateLimit
  TRACE_REPORT_HOSTNAME = TraceReportHostname
  TRACE_RESOLVER_ENABLED = TraceResolverEnabled
  TRACE_SAMPLE_RATE = TraceSampleRate
  TRACE_SAMPLING_OPERATION_RULES = TraceSamplingOperationRules
  TRACE_SAMPLING_SERVICE_RULES = TraceSamplingServiceRules
  WRITER_TYPE = WriterType
  getAgentHost()Ljava/lang/String; = AgentHost
  getAgentPort()I = AgentPort
  getAgentUnixDomainSocket()Ljava/lang/String; = AgentUnixDomainSocket
  getExcludedClasses()Ljava/util/List; = ExcludedClasses
  getFinalProfilingUrl()Ljava/lang/String; = FinalProfilingUrl
  getHeaderTags()Ljava/util/Map; = HeaderTags
  getHealthMetricsStatsdHost()Ljava/lang/String; = HealthMetricsStatsdHost
  getHealthMetricsStatsdPort()Ljava/lang/Integer; = HealthMetricsStatsdPort
  getHttpClientErrorStatuses()Ljava/util/Set; = HttpClientErrorStatuses
  getHttpServerErrorStatuses()Ljava/util/Set; = HttpServerErrorStatuses
  isDbClientSplitByInstance()Z = IsDbClientSplitByInstance
  isHealthMetricsEnabled()Z = IsHealthMetricsEnabled
  isHttpClientSplitByDomain()Z = IsHttpClientSplitByDomain
  isHttpClientTagQueryString()Z = IsHttpClientTagQueryString
  isHttpServerTagQueryString()Z = IsHttpServerTagQueryString
  isIntegrationsEnabled()Z = IsIntegrationsEnabled
  isJmxFetchEnabled()Z = IsJmxFetchEnabled
  isLogsInjectionEnabled()Z = IsLogsInjectionEnabled
  isPrioritySamplingEnabled()Z = IsPrioritySamplingEnabled
  isProfilingEnabled()Z = IsProfilingEnabled
  isProfilingStartForceFirst()Z = IsProfilingStartForceFirst
  isReportHostName()Z = IsReportHostName
  isRuntimeContextFieldInjection()Z = IsRuntimeContextFieldInjection
  isTraceAnalyticsEnabled()Z = IsTraceAnalyticsEnabled
  isTraceEnabled()Z = IsTraceEnabled
  isTraceExecutorsAll()Z = IsTraceExecutorsAll
  isTraceResolverEnabled()Z = IsTraceResolverEnabled
  getJmxFetchCheckPeriod()Ljava/lang/Integer; = JmxFetchCheckPeriod
  getJmxFetchConfigDir()Ljava/lang/String; = JmxFetchConfigDir
  getJmxFetchConfigs()Ljava/util/List; = JmxFetchConfigs
  getJmxFetchMetricsConfigs()Ljava/util/List; = JmxFetchMetricsConfigs
  getJmxFetchRefreshBeansPeriod()Ljava/lang/Integer; = JmxFetchRefreshBeansPeriod
  getJmxFetchStatsdHost()Ljava/lang/String; = JmxFetchStatsdHost
  getJmxFetchStatsdPort()Ljava/lang/Integer; = JmxFetchStatsdPort
  getLocalRootSpanTags()Ljava/util/Map; = LocalRootSpanTags
  getMergedJmxTags()Ljava/util/Map; = MergedJmxTags
  getMergedProfilingTags()Ljava/util/Map; = MergedProfilingTags
  getMergedSpanTags()Ljava/util/Map; = MergedSpanTags
  getPartialFlushMinSpans()Ljava/lang/Integer; = PartialFlushMinSpans
  getProfilingExceptionHistogramMaxCollectionSize()I = ProfilingExceptionHistogramMaxCollectionSize
  getProfilingExceptionHistogramTopItems()I = ProfilingExceptionHistogramTopItems
  getProfilingExceptionSampleLimit()I = ProfilingExceptionSampleLimit
  getProfilingProxyHost()Ljava/lang/String; = ProfilingProxyHost
  getProfilingProxyPassword()Ljava/lang/String; = ProfilingProxyPassword
  getProfilingProxyPort()I = ProfilingProxyPort
  getProfilingProxyUsername()Ljava/lang/String; = ProfilingProxyUsername
  getProfilingStartDelay()I = ProfilingStartDelay
  getProfilingTemplateOverrideFile()Ljava/lang/String; = ProfilingTemplateOverrideFile
  getProfilingUploadCompression()Ljava/lang/String; = ProfilingUploadCompression
  getProfilingUploadPeriod()I = ProfilingUploadPeriod
  getProfilingUploadTimeout()I = ProfilingUploadTimeout
  getPropagationStylesToExtract()Ljava/util/Set; = PropagationStylesToExtract
  getPropagationStylesToInject()Ljava/util/Set; = PropagationStylesToInject
  getRuntimeId()Ljava/lang/String; = RuntimeId
  getScopeDepthLimit()Ljava/lang/Integer; = ScopeDepthLimit
  getServiceMapping()Ljava/util/Map; = ServiceMapping
  getServiceName()Ljava/lang/String; = ServiceName
  getSite()Ljava/lang/String; = Site
  getSplitByTags()Ljava/util/Set; = SplitByTags
  getTraceAnnotations()Ljava/lang/String; = TraceAnnotations
  getTraceExecutors()Ljava/util/List; = TraceExecutors
  getTraceMethods()Ljava/lang/String; = TraceMethods
  getTraceRateLimit()Ljava/lang/Double; = TraceRateLimit
  getTraceSampleRate()Ljava/lang/Double; = TraceSampleRate
  getTraceSamplingOperationRules()Ljava/util/Map; = TraceSamplingOperationRules
  getTraceSamplingServiceRules()Ljava/util/Map; = TraceSamplingServiceRules
  getWriterType()Ljava/lang/String; = WriterType
  get()Lcom/datadog/trace/api/Config; = Get()
  get(Ljava/util/Properties;)Lcom/datadog/trace/api/Config; = Get(Java.Util.Properties)
  getBooleanSettingFromEnvironment(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean; = GetBooleanSettingFromEnvironment(string, Java.Lang.Boolean)
  getFloatSettingFromEnvironment(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float; = GetFloatSettingFromEnvironment(string, Java.Lang.Float)
  getInstrumentationAnalyticsSampleRate([Ljava/lang/String;)F = GetInstrumentationAnalyticsSampleRate(params string[])
  getSettingFromEnvironment(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetSettingFromEnvironment(string, string)
  isIntegrationEnabled(Ljava/util/SortedSet;Z)Z = IsIntegrationEnabled(Java.Util.ISortedSet, bool)
  isJmxFetchIntegrationEnabled(Ljava/util/SortedSet;Z)Z = IsJmxFetchIntegrationEnabled(Java.Util.ISortedSet, bool)
  isRuleEnabled(Ljava/lang/String;)Z = IsRuleEnabled(string)
  isTraceAnalyticsIntegrationEnabled(Ljava/util/SortedSet;Z)Z = IsTraceAnalyticsIntegrationEnabled(Java.Util.ISortedSet, bool)
  jmxFetchIntegrationEnabled(Ljava/util/SortedSet;Z)Z = JmxFetchIntegrationEnabled(Java.Util.ISortedSet, bool)
  traceAnalyticsIntegrationEnabled(Ljava/util/SortedSet;Z)Z = TraceAnalyticsIntegrationEnabled(Java.Util.ISortedSet, bool)
com/datadog/trace/api/DDSpanTypes = Com.Datadog.Trace.Api.DDSpanTypes
  <init>()V = .ctor()
  CACHE = Cache
  CASSANDRA = Cassandra
  COUCHBASE = Couchbase
  ELASTICSEARCH = Elasticsearch
  HIBERNATE = Hibernate
  HTTP_CLIENT = HttpClient
  HTTP_SERVER = HttpServer
  MEMCACHED = Memcached
  MESSAGE_CLIENT = MessageClient
  MESSAGE_CONSUMER = MessageConsumer
  MESSAGE_PRODUCER = MessageProducer
  MONGO = Mongo
  REDIS = Redis
  RPC = Rpc
  SQL = Sql
  WEB_SERVLET = WebServlet
com/datadog/trace/api/DDTags = Com.Datadog.Trace.Api.DDTags
  <init>()V = .ctor()
  ANALYTICS_SAMPLE_RATE = AnalyticsSampleRate
  DB_STATEMENT = DbStatement
  ERROR_MSG = ErrorMsg
  ERROR_STACK = ErrorStack
  ERROR_TYPE = ErrorType
  EVENT_SAMPLE_RATE = EventSampleRate
  HTTP_FRAGMENT = HttpFragment
  HTTP_QUERY = HttpQuery
  MANUAL_DROP = ManualDrop
  MANUAL_KEEP = ManualKeep
  RESOURCE_NAME = ResourceName
  SERVICE_NAME = ServiceName
  SPAN_TYPE = SpanType
  THREAD_ID = ThreadId
  THREAD_NAME = ThreadName
  USER_NAME = UserName
com/datadog/trace/api/DDTraceApiInfo = Com.Datadog.Trace.Api.DDTraceApiInfo
  <init>()V = .ctor()
  VERSION = Version
  main([Ljava/lang/String;)V = Main(params string[])
com/datadog/trace/api/interceptor/MutableSpan = Com.Datadog.Trace.Api.Interceptor.IMutableSpan
  getDurationNano()J = DurationNano
  getLocalRootSpan()Lcom/datadog/trace/api/interceptor/MutableSpan; = LocalRootSpan
  getOperationName()Ljava/lang/String; = OperationName
  getResourceName()Ljava/lang/String; = ResourceName
  getRootSpan()Lcom/datadog/trace/api/interceptor/MutableSpan; = RootSpan
  getSamplingPriority()Ljava/lang/Integer; = SamplingPriority
  getServiceName()Ljava/lang/String; = ServiceName
  getSpanType()Ljava/lang/String; = SpanType
  getStartTime()J = StartTime
  getTags()Ljava/util/Map; = Tags
  isError()Ljava/lang/Boolean; = IsError()
  setError(Z)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetError(bool)
  setOperationName(Ljava/lang/String;)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetOperationName(string)
  setResourceName(Ljava/lang/String;)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetResourceName(string)
  setSamplingPriority(I)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetSamplingPriority(int)
  setServiceName(Ljava/lang/String;)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetServiceName(string)
  setSpanType(Ljava/lang/String;)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetSpanType(string)
  setTag(Ljava/lang/String;Z)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetTag(string, bool)
  setTag(Ljava/lang/String;Ljava/lang/Number;)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetTag(string, Java.Lang.Number)
  setTag(Ljava/lang/String;Ljava/lang/String;)Lcom/datadog/trace/api/interceptor/MutableSpan; = SetTag(string, string)
com/datadog/trace/api/interceptor/TraceInterceptor = Com.Datadog.Trace.Api.Interceptor.ITraceInterceptor
  onTraceComplete(Ljava/util/Collection;)Ljava/util/Collection; = OnTraceComplete(System.Collections.Generic.ICollection<Com.Datadog.Trace.Api.Interceptor.IMutableSpan>)
  priority()I = Priority()
com/datadog/trace/api/sampling/PrioritySampling = Com.Datadog.Trace.Api.Sampling.PrioritySampling
  SAMPLER_DROP = SamplerDrop
  SAMPLER_KEEP = SamplerKeep
  UNSET = Unset
  USER_DROP = UserDrop
  USER_KEEP = UserKeep
com/datadog/trace/api/Trace = Com.Datadog.Trace.Api.ITrace
  operationName()Ljava/lang/String; = OperationName()
  resourceName()Ljava/lang/String; = ResourceName()
com/datadog/trace/api/Tracer = Com.Datadog.Trace.Api.ITracer
  getSpanId()Ljava/lang/String; = SpanId
  getTraceId()Ljava/lang/String; = TraceId
  addScopeListener(Lcom/datadog/trace/context/ScopeListener;)V = AddScopeListener(Com.Datadog.Trace.Context.IScopeListener)
  addTraceInterceptor(Lcom/datadog/trace/api/interceptor/TraceInterceptor;)Z = AddTraceInterceptor(Com.Datadog.Trace.Api.Interceptor.ITraceInterceptor)
com/datadog/trace/common/sampling/AbstractSampler = Com.Datadog.Trace.Common.Sampling.AbstractSampler
  <init>()V = .ctor()
  skipTagsPatterns = SkipTagsPatterns
  addSkipTagPattern(Ljava/lang/String;Ljava/util/regex/Pattern;)V = AddSkipTagPattern(string, Java.Util.Regex.Pattern)
com/datadog/trace/common/sampling/AllSampler = Com.Datadog.Trace.Common.Sampling.AllSampler
  <init>()V = .ctor()
com/datadog/trace/common/sampling/DeterministicSampler = Com.Datadog.Trace.Common.Sampling.DeterministicSampler
  <init>(D)V = .ctor(double)
  getSampleRate()D = SampleRate
com/datadog/trace/common/sampling/PrioritySampler = Com.Datadog.Trace.Common.Sampling.IPrioritySampler
com/datadog/trace/common/sampling/PrioritySampling = Com.Datadog.Trace.Common.Sampling.PrioritySampling
  SAMPLER_DROP = SamplerDrop
  SAMPLER_KEEP = SamplerKeep
  UNSET = Unset
  USER_DROP = UserDrop
  USER_KEEP = UserKeep
com/datadog/trace/common/sampling/RateByServiceSampler = Com.Datadog.Trace.Common.Sampling.RateByServiceSampler
  <init>()V = .ctor()
  SAMPLING_AGENT_RATE = SamplingAgentRate
com/datadog/trace/common/sampling/RateSampler = Com.Datadog.Trace.Common.Sampling.IRateSampler
  getSampleRate()D = SampleRate
com/datadog/trace/common/sampling/Sampler = Com.Datadog.Trace.Common.Sampling.ISampler
com/datadog/trace/common/sampling/SamplingRule = Com.Datadog.Trace.Common.Sampling.SamplingRule
  <init>(Lcom/datadog/trace/common/sampling/RateSampler;)V = .ctor(Com.Datadog.Trace.Common.Sampling.IRateSampler)
  getSampler()Lcom/datadog/trace/common/sampling/RateSampler; = Sampler
com/datadog/trace/common/util/Clock = Com.Datadog.Trace.Common.Util.Clock
  <init>()V = .ctor()
  currentMicroTime()J = CurrentMicroTime()
  currentNanoTicks()J = CurrentNanoTicks()
  currentNanoTime()J = CurrentNanoTime()
com/datadog/trace/common/writer/LoggingWriter = Com.Datadog.Trace.Common.Writer.LoggingWriter
  <init>()V = .ctor()
  close()V = Close()
  incrementTraceCount()V = IncrementTraceCount()
  start()V = Start()
com/datadog/trace/common/writer/Writer = Com.Datadog.Trace.Common.Writer.IWriter
  close()V = Close()
  incrementTraceCount()V = IncrementTraceCount()
  start()V = Start()
com/datadog/trace/context/ScopeListener = Com.Datadog.Trace.Context.IScopeListener
  afterScopeActivated()V = AfterScopeActivated()
  afterScopeClosed()V = AfterScopeClosed()
com/datadog/trace/context/TraceScope = Com.Datadog.Trace.Context.ITraceScope
  isAsyncPropagating()Z = IsAsyncPropagating
  capture()Lcom/datadog/trace/context/TraceScope$Continuation; = Capture()
  close()V = Close()
  setAsyncPropagation(Z)V = SetAsyncPropagation(bool)
